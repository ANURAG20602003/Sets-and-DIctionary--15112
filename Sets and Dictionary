
(15-112 Spring 2022 Quiz 8, Doha Campus)


# function dictDifference(d1, d2) that takes two dictionaries whose
values are sets and returns a new dictionary that results from taking d1 and removing the values in d2
for the common keys. If one the values becomes an empty set in the resulting dictionary, then the key
should be removed. The values of non-common keys should remain the same. The function should be
non-destructive.  


def dictDifference(d1,d2):
  returningDict = dict()
  dict1Keys = set(d1.keys())
  dict2Keys = set(d2.keys())
  sameKeys = list(dict1Keys & dict2Keys)
  for key1 in sameKeys:
    if d1[key1] - d2[key1] != {}:
      returningDict[key1] = d1[key1] - d2[key1] 
  diffKeys = list(dict1Keys.difference(sameKeys))
  for key2 in diffKeys:
    returningDict[key2] = d1[key2]
  return returningDict

(15112 Fall 2021 Quiz 7, Doha Campus)


# function commonKeysDictionary(L) that takes a list of dictionaries and combines them into a
single dictionary. The combined dictionary should contain only keys that are present in all the dictionaries in
L. The value of each key in the combined dictionary should be the set of values associated with that key from
the dictionaries in L. For example given: L = [ {"a": 1, "b": 2}, {"a": 3, "c": 4}, {"a": 5} ]
commonKeysDictionary(L) returns {"a": {1,3,5}}, because the only key that is present in all the three
dictionaries in L is a.

def commonKeysDictionary(L):
    if not L:
        return {}
    result = dict(L[0])

    for d in L[1:]:
        resultKeys = set(result.keys())
        currentKeys = set(d.keys())
        commonKeys = resultKeys.intersection(currentKeys)
        for key in commonKeys:
            result[key] = result[key].union({d[key]})

    return result

# Test cases
L1 = [{"a": 1, "b": 2}, {"a": 3, "c": 4}, {"a": 5}]
print(commonKeysDictionary(L1))  # Output: {"a": {1, 3, 5}}

L2 = [{"a": 1, "b": 2, "c": 42}, {"a": 1, "c": 4}]
print(commonKeysDictionary(L2))  # Output: {"a": {1}, "c": {4, 42}}

L3 = [{"a": 1, "b": 2}, {"a": 3, "c": 4}, {"a": 5}]
print(commonKeysDictionary(L3))  # Output: {"a": {1, 3, 5}}

L4 = []
print(commonKeysDictionary(L4))  # Output: {}




